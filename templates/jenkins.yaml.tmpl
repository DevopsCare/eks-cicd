clusterZone: ${global_fqdn}
fullnameOverride: jenkins

rbac:
  create: true
  readSecrets: true

master:
  tag: lts-jdk11
  sidecars:
    configAutoReload:
      enabled: true
  JCasC:
    enabled: true
    configScripts:

      groovy: |
        groovy:
        - script: >
            import com.cloudbees.hudson.plugins.folder.*;
            import jenkins.model.Jenkins;
            if (Jenkins.instance.getItem('Infrastructure') == null) {
              Jenkins.instance.createProject(Folder.class, 'Infrastructure');
            }
      jobs: |
        jobs:
        - script: >
            multibranchPipelineJob('Infrastructure/Create') {
              branchSources {
                git {
                  id = 'cad3-create-casc'
                  remote('${cadmium_repo}')
                  credentialsId('cadmium')
                  includes('master')
                }
              }
              factory {
                workflowBranchProjectFactory {
                  scriptPath('Jenkinsfile.create')
                }
              }
            }
        - script: >
            multibranchPipelineJob('Infrastructure/Destroy') {
              branchSources {
                git {
                  id = 'cad3-destroy-casc'
                  remote('${cadmium_repo}')
                  credentialsId('cadmium')
                  includes('master')
                }
              }
              factory {
                workflowBranchProjectFactory {
                  scriptPath('Jenkinsfile.destroy')
                }
              }
            }

      general: |
        jenkins:
          agentProtocols:
          - "JNLP4-connect"
          - "Ping"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          disableRememberMe: false
          globalNodeProperties:
          - envVars:
              env:
              - key: "DOCKER_REGISTRY"
                value: "${ecr_url}"
              - key: "GLOBAL_ENABLED_ENVIRONMENT_TYPE"
                value: "K8 Namespace"
              - key: "GLOBAL_FQDN"
                value: "${global_fqdn}"
              - key: "PROJECT_PREFIX"
                value: "${project_prefix}"
          markupFormatter:
            rawHtml:
              disableSyntaxHighlighting: false
          mode: NORMAL
          myViewsTabBar: "standard"
          numExecutors: 2
          primaryView:
            all:
              name: "all"
          projectNamingStrategy: "standard"
          quietPeriod: 5
          remotingSecurity:
            enabled: true
          scmCheckoutRetryCount: 0
          securityRealm: "legacy"
          slaveAgentPort: 50000
          updateCenter:
            sites:
            - id: "default"
              url: "https://updates.jenkins.io/update-center.json"
          views:
          - all:
              name: "all"
          viewsTabBar: "standard"

      clouds: |
        jenkins:
          clouds:
          - kubernetes:
              containerCapStr: "0"
              jenkinsTunnel: "jenkins-agent:50000"
              jenkinsUrl: "http://jenkins:8080"
              maxRequestsPerHostStr: "32"
              name: "kubernetes"
              namespace: "${namespace}"
              serverUrl: "https://kubernetes.default:443"
              templates:
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "alpine/helm:3.1.2"
                  name: "helm"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "500m"
                  resourceLimitMemory: "256Mi"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                  ttyEnabled: true
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "bitnami/kubectl:1.16"
                  name: "kubectl"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "500m"
                  resourceLimitMemory: "256Mi"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-kubernetes"
                name: "kubernetes"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/root/.m2/"
                    secretName: "jenkins-maven-settings"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "gcr.io/jenkinsxio/builder-gradle:0.1.551"
                  name: "gradle"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "1"
                  resourceLimitMemory: "1024Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "512Mi"
                  ttyEnabled: true
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                - containerEnvVar:
                    key: "_JAVA_OPTIONS"
                    value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\
                      \ -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5\
                      \ -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90\
                      \ -Xms10m -Xmx192m"
                label: "jenkins-gradle"
                name: "gradle"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "gcr.io/jenkinsxio/builder-jx:0.1.551"
                  name: "jx-base"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "400m"
                  resourceLimitMemory: "512Mi"
                  resourceRequestCpu: "200m"
                  resourceRequestMemory: "256Mi"
                  ttyEnabled: true
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-jx-base"
                name: "jx-base"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "gcr.io/jenkinsxio/builder-maven:0.1.551"
                  name: "maven"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "1"
                  resourceLimitMemory: "1024Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "512Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "MAVEN_OPTS"
                    value: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                - containerEnvVar:
                    key: "_JAVA_OPTIONS"
                    value: "-XX:+UnlockExperimentalVMOptions\
                      \ -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5\
                      \ -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90\
                      \ -Xms10m -Xmx192m"
                label: "jenkins-maven"
                name: "maven"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/root/.m2/"
                    secretName: "jenkins-maven-settings"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "gcr.io/jenkinsxio/builder-maven-java11:0.1.551"
                  name: "maven"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "1"
                  resourceLimitMemory: "1024Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "512Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "MAVEN_OPTS"
                    value: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                - containerEnvVar:
                    key: "_JAVA_OPTIONS"
                    value: "-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true\
                      \ -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10\
                      \ -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m"
                label: "jenkins-maven-java11"
                name: "maven-java11"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/root/.m2/"
                    secretName: "jenkins-maven-settings"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "hashicorp/packer:1.5.5"
                  name: "packer"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-packer"
                name: "packer"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "gcr.io/jenkinsxio/builder-jx:0.1.551"
                  name: "promote"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "400m"
                  resourceLimitMemory: "200Mi"
                  resourceRequestCpu: "200m"
                  resourceRequestMemory: "100Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-promote"
                name: "promote"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "python:3-buster"
                  name: "python"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "2"
                  resourceLimitMemory: "2048Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "512Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-python"
                name: "python"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "python:2-buster"
                  name: "python"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "2"
                  resourceLimitMemory: "2048Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "512Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-python2"
                name: "python2"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "hashicorp/terraform:0.12.24"
                  name: "terraform"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "1"
                  resourceLimitMemory: "1448Mi"
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "600Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-terraform"
                name: "terraform"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"
              - containers:
                - args: "^$${computer.jnlpmac} ^$${computer.name}"
                  image: "jenkins/inbound-agent:4.3-4-jdk11"
                  name: "jnlp"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "128Mi"
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "alpine/helm:3.1.2"
                  name: "helm"
                  runAsUser: 1000
                  runAsGroup: 1000
                  resourceLimitCpu: "1"
                  resourceLimitMemory: "512Mi"
                  resourceRequestCpu: "200m"
                  resourceRequestMemory: "256Mi"
                  ttyEnabled: true
                envVars:
                - containerEnvVar:
                    key: "DOCKER_CONFIG"
                    value: "/home/jenkins/.docker/"
                - containerEnvVar:
                    key: "GIT_AUTHOR_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_AUTHOR_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "GIT_COMMITTER_EMAIL"
                    value: "cadmium@${global_fqdn}"
                - containerEnvVar:
                    key: "GIT_COMMITTER_NAME"
                    value: "cadmium"
                - containerEnvVar:
                    key: "XDG_CONFIG_HOME"
                    value: "/home/jenkins/agent"
                label: "jenkins-helm"
                name: "helm3"
                serviceAccount: "jenkins"
                slaveConnectTimeoutStr: "0"
                volumes:
                - hostPathVolume:
                    hostPath: "/var/run/docker.sock"
                    mountPath: "/var/run/docker.sock"
                - secretVolume:
                    mountPath: "/home/jenkins/.docker"
                    secretName: "jenkins-docker-cfg"

      security: |
        security:
          apiToken:
            creationOfLegacyTokenEnabled: false
            tokenGenerationOnCreationEnabled: false
            usageStatisticsEnabled: true
          globalJobDslSecurityConfiguration:
            useScriptSecurity: false
          sSHD:
            port: -1
          scriptApproval:
            approvedSignatures:
            - "method hudson.model.Item delete"
            - "method jenkins.model.Jenkins getItemByFullName java.lang.String"
            - "staticMethod jenkins.model.Jenkins getInstance"

      unclassified: |
        unclassified:
          ansiColorBuildWrapper:
            colorMaps:
            - black: "#000000"
              blackB: "#4C4C4C"
              blue: "#1E90FF"
              blueB: "#4682B4"
              cyan: "#00CDCD"
              cyanB: "#00FFFF"
              green: "#00CD00"
              greenB: "#00FF00"
              magenta: "#CD00CD"
              magentaB: "#FF00FF"
              name: "xterm"
              red: "#CD0000"
              redB: "#FF0000"
              white: "#E5E5E5"
              whiteB: "#FFFFFF"
              yellow: "#CDCD00"
              yellowB: "#FFFF00"
            - black: "#000000"
              blackB: "#555555"
              blue: "#0000AA"
              blueB: "#5555FF"
              cyan: "#00AAAA"
              cyanB: "#55FFFF"
              defaultBackground: 0
              defaultForeground: 7
              green: "#00AA00"
              greenB: "#55FF55"
              magenta: "#AA00AA"
              magentaB: "#FF55FF"
              name: "vga"
              red: "#AA0000"
              redB: "#FF5555"
              white: "#AAAAAA"
              whiteB: "#FFFFFF"
              yellow: "#AA5500"
              yellowB: "#FFFF55"
            - black: "black"
              blackB: "black"
              blue: "blue"
              blueB: "blue"
              cyan: "cyan"
              cyanB: "cyan"
              green: "green"
              greenB: "green"
              magenta: "magenta"
              magentaB: "magenta"
              name: "css"
              red: "red"
              redB: "red"
              white: "white"
              whiteB: "white"
              yellow: "yellow"
              yellowB: "yellow"
            - black: "#2E3436"
              blackB: "#2E3436"
              blue: "#3465A4"
              blueB: "#3465A4"
              cyan: "#06989A"
              cyanB: "#06989A"
              defaultBackground: 0
              defaultForeground: 7
              green: "#4E9A06"
              greenB: "#4E9A06"
              magenta: "#75507B"
              magentaB: "#75507B"
              name: "gnome-terminal"
              red: "#CC0000"
              redB: "#CC0000"
              white: "#D3D7CF"
              whiteB: "#D3D7CF"
              yellow: "#C4A000"
              yellowB: "#C4A000"
          artifactoryBuilder:
            useCredentialsPlugin: false
          bitbucketEndpointConfiguration:
            endpoints:
            - bitbucketCloudEndpoint:
                enableCache: false
                manageHooks: false
                repositoriesCacheDuration: 0
                teamCacheDuration: 0
          contentFilters:
            enabled: false
          defaultFolderConfiguration:
            healthMetrics:
            - worstChildHealthMetric:
                recursive: true
          gitHubPluginConfig:
            hookUrl: "http://jenkins.${namespace}.${project_prefix}.${global_fqdn}/github-webhook/"
          gitSCM:
            createAccountBasedOnEmail: false
            showEntireCommitSummaryInChanges: false
            useExistingAccountWithSameEmail: false
          ivyBuildTrigger:
            extendedVersionMatching: false
          location:
            adminAddress: "address not configured yet <nobody@nowhere>"
            url: "http://jenkins.${namespace}.${project_prefix}.${global_fqdn}/"
          mailer:
            charset: "UTF-8"
            useSsl: false
          mavenModuleSet:
            localRepository: "default"
          pollSCM:
            pollingThreadCount: 10
          sonarGlobalConfiguration:
            buildWrapperEnabled: false
          timestamperConfig:
            allPipelines: false
            elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
            systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
          upstream:
            globalUpstreamFilterStrategy: UseOldest

      tool: |
        tool:
          git:
            installations:
            - home: "/usr/bin/git"
              name: "Default"
          pipelineMaven:
            triggerDownstreamUponResultAborted: false
            triggerDownstreamUponResultFailure: false
            triggerDownstreamUponResultNotBuilt: false
            triggerDownstreamUponResultSuccess: true
            triggerDownstreamUponResultUnstable: false

  numExecutors: 2
  adminPassword: ${admin_password}
  resources:
    requests:
      cpu: ${jenkins_cpu}
      memory: ${jenkins_memory}
  serviceAnnotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx\ncert-manager.io/cluster-issuer: letsencrypt-prod"
  enableRawHtmlMarkupFormatter: true
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
  prometheus:
    enabled: true
  overwritePlugin: false
  installPlugins:
  - ace-editor:1.1
  - ansicolor:0.6.2
  - ant:1.10
  - antisamy-markup-formatter:1.7
  - apache-httpcomponents-client-4-api:4.5.10-2.0
  - artifactory:3.5.0
  - authentication-tokens:1.3
  - basic-branch-build-strategies:1.3.2
  - blueocean-autofavorite:1.2.4
  - blueocean-bitbucket-pipeline:1.21.0
  - blueocean-commons:1.21.0
  - blueocean-config:1.21.0
  - blueocean-core-js:1.21.0
  - blueocean-dashboard:1.21.0
  - blueocean-display-url:2.3.0
  - blueocean-events:1.21.0
  - blueocean-git-pipeline:1.21.0
  - blueocean-github-pipeline:1.21.0
  - blueocean-i18n:1.21.0
  - blueocean-jira:1.21.0
  - blueocean-jwt:1.21.0
  - blueocean-personalization:1.21.0
  - blueocean-pipeline-api-impl:1.21.0
  - blueocean-pipeline-editor:1.21.0
  - blueocean-pipeline-scm-api:1.21.0
  - blueocean-rest-impl:1.21.0
  - blueocean-rest:1.21.0
  - blueocean-web:1.21.0
  - blueocean:1.21.0
  - bouncycastle-api:2.18
  - branch-api:2.5.5
  - cloudbees-bitbucket-branch-source:2.6.0
  - cloudbees-folder:6.12
  - command-launcher:1.4
  - config-file-provider:3.6.3
  - configuration-as-code-groovy:1.1
  - configuration-as-code:1.35
  - copyartifact:1.43
  - credentials-binding:1.20
  - credentials:2.3.7
  - display-url-api:2.3.2
  - docker-commons:1.16
  - docker-workflow:1.23
  - durable-task:1.34
  - external-monitor-job:1.7
  - favorite:2.3.2
  - folder-properties:1.0
  - git-client:3.0.0
  - git-server:1.9
  - git:4.0.0
  - gitea:1.1.2
  - github-api:1.95
  - github-branch-source:2.5.8
  - github:1.29.5
  - gitlab-plugin:1.5.13
  - gradle:1.36
  - greenballs:1.15
  - h2-api:1.4.199
  - handlebars:1.1.1
  - handy-uri-templates-2-api:2.1.8-1.0
  - htmlpublisher:1.21
  - http_request:1.8.24
  - ivy:2.1
  - jackson2-api:2.10.3
  - javadoc:1.5
  - jdk-tool:1.4
  - jenkins-design-language:1.21.0
  - jira:3.0.11
  - job-dsl:1.76
  - jquery-detached:1.2.1
  - jsch:0.1.55.1
  - junit:1.28
  - kubernetes-credentials-provider:0.13
  - kubernetes-credentials:0.6.2
  - kubernetes:1.25.3
  - ldap:1.21
  - localization-zh-cn:0.0.15
  - lockable-resources:2.7
  - mailer:1.29
  - matrix-auth:2.5
  - matrix-project:1.14
  - maven-plugin:3.4
  - mercurial:2.8
  - metrics:4.0.2.6
  - momentjs:1.1.1
  - pam-auth:1.6
  - pipeline-build-step:2.11
  - pipeline-graph-analysis:1.10
  - pipeline-input-step:2.11
  - pipeline-maven:3.8.2
  - pipeline-milestone-step:1.3.1
  - pipeline-model-api:1.6.0
  - pipeline-model-declarative-agent:1.1.1
  - pipeline-model-definition:1.6.0
  - pipeline-model-extensions:1.6.0
  - pipeline-rest-api:2.12
  - pipeline-stage-step:2.3
  - pipeline-stage-tags-metadata:1.6.0
  - pipeline-stage-view:2.12
  - pipeline-utility-steps:2.3.1
  - plain-credentials:1.7
  - pubsub-light:1.13
  - rebuild:1.31
  - resource-disposer:0.14
  - saml:1.1.2
  - scm-api:2.6.3
  - scm-filter-branch-pr:0.4
  - script-security:1.68
  - sonar:2.11
  - sse-gateway:1.20
  - ssh-credentials:1.17.3
  - structs:1.20
  - support-core:2.65
  - testng-plugin:1.15
  - timestamper:1.10
  - token-macro:2.10
  - variant:1.3
  - windows-slaves:1.6
  - workflow-aggregator:2.6
  - workflow-api:2.40
  - workflow-basic-steps:2.19
  - workflow-cps-global-lib:2.15
  - workflow-cps:2.80
  - workflow-durable-task-step:2.31
  - workflow-job:2.36
  - workflow-multibranch:2.21
  - workflow-scm-step:2.9
  - workflow-step-api:2.22
  - workflow-support:3.3
  - ws-cleanup:0.38
  containerEnv: {}

agent:
  envVars:
    - name: DOCKER_REGISTRY
      value: ${ecr_url}
    - name: PROJECT_PREFIX
      value: ${project_prefix}
    - name: GLOBAL_FQDN
      value: ${global_fqdn}
    - name: GLOBAL_ENABLED_ENVIRONMENT_TYPE
      value: K8 Namespace

